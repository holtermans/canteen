package org.linlinjava.litemall.db.domain;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallMealOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public LitemallMealOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public LitemallMealOrderExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public LitemallMealOrderExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallMealOrderExample example = new LitemallMealOrderExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public LitemallMealOrderExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public LitemallMealOrderExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNull() {
            addCriterion("order_id is null");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNotNull() {
            addCriterion("order_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrderIdEqualTo(Integer value) {
            addCriterion("order_id =", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdNotEqualTo(Integer value) {
            addCriterion("order_id <>", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThan(Integer value) {
            addCriterion("order_id >", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_id >=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThan(Integer value) {
            addCriterion("order_id <", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("order_id <=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdIn(List<Integer> values) {
            addCriterion("order_id in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotIn(List<Integer> values) {
            addCriterion("order_id not in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("order_id between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("order_id not between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("`date` is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("`date` is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(LocalDate value) {
            addCriterion("`date` =", value, "date");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDateEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("`date` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(LocalDate value) {
            addCriterion("`date` <>", value, "date");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDateNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("`date` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(LocalDate value) {
            addCriterion("`date` >", value, "date");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDateGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("`date` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("`date` >=", value, "date");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDateGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("`date` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDateLessThan(LocalDate value) {
            addCriterion("`date` <", value, "date");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDateLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("`date` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("`date` <=", value, "date");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDateLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("`date` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDateIn(List<LocalDate> values) {
            addCriterion("`date` in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<LocalDate> values) {
            addCriterion("`date` not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("`date` between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("`date` not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andTimingIdIsNull() {
            addCriterion("timing_id is null");
            return (Criteria) this;
        }

        public Criteria andTimingIdIsNotNull() {
            addCriterion("timing_id is not null");
            return (Criteria) this;
        }

        public Criteria andTimingIdEqualTo(Integer value) {
            addCriterion("timing_id =", value, "timingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingIdEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingIdNotEqualTo(Integer value) {
            addCriterion("timing_id <>", value, "timingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingIdNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingIdGreaterThan(Integer value) {
            addCriterion("timing_id >", value, "timingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingIdGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("timing_id >=", value, "timingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingIdGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingIdLessThan(Integer value) {
            addCriterion("timing_id <", value, "timingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingIdLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingIdLessThanOrEqualTo(Integer value) {
            addCriterion("timing_id <=", value, "timingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingIdLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingIdIn(List<Integer> values) {
            addCriterion("timing_id in", values, "timingId");
            return (Criteria) this;
        }

        public Criteria andTimingIdNotIn(List<Integer> values) {
            addCriterion("timing_id not in", values, "timingId");
            return (Criteria) this;
        }

        public Criteria andTimingIdBetween(Integer value1, Integer value2) {
            addCriterion("timing_id between", value1, value2, "timingId");
            return (Criteria) this;
        }

        public Criteria andTimingIdNotBetween(Integer value1, Integer value2) {
            addCriterion("timing_id not between", value1, value2, "timingId");
            return (Criteria) this;
        }

        public Criteria andTimingNameIsNull() {
            addCriterion("timing_name is null");
            return (Criteria) this;
        }

        public Criteria andTimingNameIsNotNull() {
            addCriterion("timing_name is not null");
            return (Criteria) this;
        }

        public Criteria andTimingNameEqualTo(String value) {
            addCriterion("timing_name =", value, "timingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingNameEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingNameNotEqualTo(String value) {
            addCriterion("timing_name <>", value, "timingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingNameNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingNameGreaterThan(String value) {
            addCriterion("timing_name >", value, "timingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingNameGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingNameGreaterThanOrEqualTo(String value) {
            addCriterion("timing_name >=", value, "timingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingNameGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingNameLessThan(String value) {
            addCriterion("timing_name <", value, "timingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingNameLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingNameLessThanOrEqualTo(String value) {
            addCriterion("timing_name <=", value, "timingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andTimingNameLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("timing_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimingNameLike(String value) {
            addCriterion("timing_name like", value, "timingName");
            return (Criteria) this;
        }

        public Criteria andTimingNameNotLike(String value) {
            addCriterion("timing_name not like", value, "timingName");
            return (Criteria) this;
        }

        public Criteria andTimingNameIn(List<String> values) {
            addCriterion("timing_name in", values, "timingName");
            return (Criteria) this;
        }

        public Criteria andTimingNameNotIn(List<String> values) {
            addCriterion("timing_name not in", values, "timingName");
            return (Criteria) this;
        }

        public Criteria andTimingNameBetween(String value1, String value2) {
            addCriterion("timing_name between", value1, value2, "timingName");
            return (Criteria) this;
        }

        public Criteria andTimingNameNotBetween(String value1, String value2) {
            addCriterion("timing_name not between", value1, value2, "timingName");
            return (Criteria) this;
        }

        public Criteria andDishesIdIsNull() {
            addCriterion("dishes_id is null");
            return (Criteria) this;
        }

        public Criteria andDishesIdIsNotNull() {
            addCriterion("dishes_id is not null");
            return (Criteria) this;
        }

        public Criteria andDishesIdEqualTo(Integer value) {
            addCriterion("dishes_id =", value, "dishesId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesIdEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesIdNotEqualTo(Integer value) {
            addCriterion("dishes_id <>", value, "dishesId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesIdNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesIdGreaterThan(Integer value) {
            addCriterion("dishes_id >", value, "dishesId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesIdGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dishes_id >=", value, "dishesId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesIdGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesIdLessThan(Integer value) {
            addCriterion("dishes_id <", value, "dishesId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesIdLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesIdLessThanOrEqualTo(Integer value) {
            addCriterion("dishes_id <=", value, "dishesId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesIdLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesIdIn(List<Integer> values) {
            addCriterion("dishes_id in", values, "dishesId");
            return (Criteria) this;
        }

        public Criteria andDishesIdNotIn(List<Integer> values) {
            addCriterion("dishes_id not in", values, "dishesId");
            return (Criteria) this;
        }

        public Criteria andDishesIdBetween(Integer value1, Integer value2) {
            addCriterion("dishes_id between", value1, value2, "dishesId");
            return (Criteria) this;
        }

        public Criteria andDishesIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dishes_id not between", value1, value2, "dishesId");
            return (Criteria) this;
        }

        public Criteria andDishesNameIsNull() {
            addCriterion("dishes_name is null");
            return (Criteria) this;
        }

        public Criteria andDishesNameIsNotNull() {
            addCriterion("dishes_name is not null");
            return (Criteria) this;
        }

        public Criteria andDishesNameEqualTo(String value) {
            addCriterion("dishes_name =", value, "dishesName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesNameEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesNameNotEqualTo(String value) {
            addCriterion("dishes_name <>", value, "dishesName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesNameNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesNameGreaterThan(String value) {
            addCriterion("dishes_name >", value, "dishesName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesNameGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesNameGreaterThanOrEqualTo(String value) {
            addCriterion("dishes_name >=", value, "dishesName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesNameGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesNameLessThan(String value) {
            addCriterion("dishes_name <", value, "dishesName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesNameLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesNameLessThanOrEqualTo(String value) {
            addCriterion("dishes_name <=", value, "dishesName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesNameLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesNameLike(String value) {
            addCriterion("dishes_name like", value, "dishesName");
            return (Criteria) this;
        }

        public Criteria andDishesNameNotLike(String value) {
            addCriterion("dishes_name not like", value, "dishesName");
            return (Criteria) this;
        }

        public Criteria andDishesNameIn(List<String> values) {
            addCriterion("dishes_name in", values, "dishesName");
            return (Criteria) this;
        }

        public Criteria andDishesNameNotIn(List<String> values) {
            addCriterion("dishes_name not in", values, "dishesName");
            return (Criteria) this;
        }

        public Criteria andDishesNameBetween(String value1, String value2) {
            addCriterion("dishes_name between", value1, value2, "dishesName");
            return (Criteria) this;
        }

        public Criteria andDishesNameNotBetween(String value1, String value2) {
            addCriterion("dishes_name not between", value1, value2, "dishesName");
            return (Criteria) this;
        }

        public Criteria andDishesPriceIsNull() {
            addCriterion("dishes_price is null");
            return (Criteria) this;
        }

        public Criteria andDishesPriceIsNotNull() {
            addCriterion("dishes_price is not null");
            return (Criteria) this;
        }

        public Criteria andDishesPriceEqualTo(Long value) {
            addCriterion("dishes_price =", value, "dishesPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPriceEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPriceNotEqualTo(Long value) {
            addCriterion("dishes_price <>", value, "dishesPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPriceNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPriceGreaterThan(Long value) {
            addCriterion("dishes_price >", value, "dishesPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPriceGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPriceGreaterThanOrEqualTo(Long value) {
            addCriterion("dishes_price >=", value, "dishesPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPriceGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPriceLessThan(Long value) {
            addCriterion("dishes_price <", value, "dishesPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPriceLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPriceLessThanOrEqualTo(Long value) {
            addCriterion("dishes_price <=", value, "dishesPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPriceLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPriceIn(List<Long> values) {
            addCriterion("dishes_price in", values, "dishesPrice");
            return (Criteria) this;
        }

        public Criteria andDishesPriceNotIn(List<Long> values) {
            addCriterion("dishes_price not in", values, "dishesPrice");
            return (Criteria) this;
        }

        public Criteria andDishesPriceBetween(Long value1, Long value2) {
            addCriterion("dishes_price between", value1, value2, "dishesPrice");
            return (Criteria) this;
        }

        public Criteria andDishesPriceNotBetween(Long value1, Long value2) {
            addCriterion("dishes_price not between", value1, value2, "dishesPrice");
            return (Criteria) this;
        }

        public Criteria andDishesBriefIsNull() {
            addCriterion("dishes_brief is null");
            return (Criteria) this;
        }

        public Criteria andDishesBriefIsNotNull() {
            addCriterion("dishes_brief is not null");
            return (Criteria) this;
        }

        public Criteria andDishesBriefEqualTo(String value) {
            addCriterion("dishes_brief =", value, "dishesBrief");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesBriefEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_brief = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesBriefNotEqualTo(String value) {
            addCriterion("dishes_brief <>", value, "dishesBrief");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesBriefNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_brief <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesBriefGreaterThan(String value) {
            addCriterion("dishes_brief >", value, "dishesBrief");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesBriefGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_brief > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesBriefGreaterThanOrEqualTo(String value) {
            addCriterion("dishes_brief >=", value, "dishesBrief");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesBriefGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_brief >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesBriefLessThan(String value) {
            addCriterion("dishes_brief <", value, "dishesBrief");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesBriefLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_brief < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesBriefLessThanOrEqualTo(String value) {
            addCriterion("dishes_brief <=", value, "dishesBrief");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesBriefLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_brief <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesBriefLike(String value) {
            addCriterion("dishes_brief like", value, "dishesBrief");
            return (Criteria) this;
        }

        public Criteria andDishesBriefNotLike(String value) {
            addCriterion("dishes_brief not like", value, "dishesBrief");
            return (Criteria) this;
        }

        public Criteria andDishesBriefIn(List<String> values) {
            addCriterion("dishes_brief in", values, "dishesBrief");
            return (Criteria) this;
        }

        public Criteria andDishesBriefNotIn(List<String> values) {
            addCriterion("dishes_brief not in", values, "dishesBrief");
            return (Criteria) this;
        }

        public Criteria andDishesBriefBetween(String value1, String value2) {
            addCriterion("dishes_brief between", value1, value2, "dishesBrief");
            return (Criteria) this;
        }

        public Criteria andDishesBriefNotBetween(String value1, String value2) {
            addCriterion("dishes_brief not between", value1, value2, "dishesBrief");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlIsNull() {
            addCriterion("dishes_pic_url is null");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlIsNotNull() {
            addCriterion("dishes_pic_url is not null");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlEqualTo(String value) {
            addCriterion("dishes_pic_url =", value, "dishesPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPicUrlEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_pic_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlNotEqualTo(String value) {
            addCriterion("dishes_pic_url <>", value, "dishesPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPicUrlNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_pic_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlGreaterThan(String value) {
            addCriterion("dishes_pic_url >", value, "dishesPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPicUrlGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_pic_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlGreaterThanOrEqualTo(String value) {
            addCriterion("dishes_pic_url >=", value, "dishesPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPicUrlGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_pic_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlLessThan(String value) {
            addCriterion("dishes_pic_url <", value, "dishesPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPicUrlLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_pic_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlLessThanOrEqualTo(String value) {
            addCriterion("dishes_pic_url <=", value, "dishesPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDishesPicUrlLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("dishes_pic_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlLike(String value) {
            addCriterion("dishes_pic_url like", value, "dishesPicUrl");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlNotLike(String value) {
            addCriterion("dishes_pic_url not like", value, "dishesPicUrl");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlIn(List<String> values) {
            addCriterion("dishes_pic_url in", values, "dishesPicUrl");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlNotIn(List<String> values) {
            addCriterion("dishes_pic_url not in", values, "dishesPicUrl");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlBetween(String value1, String value2) {
            addCriterion("dishes_pic_url between", value1, value2, "dishesPicUrl");
            return (Criteria) this;
        }

        public Criteria andDishesPicUrlNotBetween(String value1, String value2) {
            addCriterion("dishes_pic_url not between", value1, value2, "dishesPicUrl");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andCancelledIsNull() {
            addCriterion("cancelled is null");
            return (Criteria) this;
        }

        public Criteria andCancelledIsNotNull() {
            addCriterion("cancelled is not null");
            return (Criteria) this;
        }

        public Criteria andCancelledEqualTo(Boolean value) {
            addCriterion("cancelled =", value, "cancelled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andCancelledEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("cancelled = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelledNotEqualTo(Boolean value) {
            addCriterion("cancelled <>", value, "cancelled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andCancelledNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("cancelled <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelledGreaterThan(Boolean value) {
            addCriterion("cancelled >", value, "cancelled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andCancelledGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("cancelled > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelledGreaterThanOrEqualTo(Boolean value) {
            addCriterion("cancelled >=", value, "cancelled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andCancelledGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("cancelled >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelledLessThan(Boolean value) {
            addCriterion("cancelled <", value, "cancelled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andCancelledLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("cancelled < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelledLessThanOrEqualTo(Boolean value) {
            addCriterion("cancelled <=", value, "cancelled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andCancelledLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("cancelled <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelledIn(List<Boolean> values) {
            addCriterion("cancelled in", values, "cancelled");
            return (Criteria) this;
        }

        public Criteria andCancelledNotIn(List<Boolean> values) {
            addCriterion("cancelled not in", values, "cancelled");
            return (Criteria) this;
        }

        public Criteria andCancelledBetween(Boolean value1, Boolean value2) {
            addCriterion("cancelled between", value1, value2, "cancelled");
            return (Criteria) this;
        }

        public Criteria andCancelledNotBetween(Boolean value1, Boolean value2) {
            addCriterion("cancelled not between", value1, value2, "cancelled");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNull() {
            addCriterion("quantity is null");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNotNull() {
            addCriterion("quantity is not null");
            return (Criteria) this;
        }

        public Criteria andQuantityEqualTo(Integer value) {
            addCriterion("quantity =", value, "quantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andQuantityEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("quantity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityNotEqualTo(Integer value) {
            addCriterion("quantity <>", value, "quantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andQuantityNotEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("quantity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThan(Integer value) {
            addCriterion("quantity >", value, "quantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andQuantityGreaterThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("quantity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("quantity >=", value, "quantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andQuantityGreaterThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("quantity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityLessThan(Integer value) {
            addCriterion("quantity <", value, "quantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andQuantityLessThanColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("quantity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityLessThanOrEqualTo(Integer value) {
            addCriterion("quantity <=", value, "quantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andQuantityLessThanOrEqualToColumn(LitemallMealOrder.Column column) {
            addCriterion(new StringBuilder("quantity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuantityIn(List<Integer> values) {
            addCriterion("quantity in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotIn(List<Integer> values) {
            addCriterion("quantity not in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityBetween(Integer value1, Integer value2) {
            addCriterion("quantity between", value1, value2, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotBetween(Integer value1, Integer value2) {
            addCriterion("quantity not between", value1, value2, "quantity");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_meal_order
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        private LitemallMealOrderExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        protected Criteria(LitemallMealOrderExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public LitemallMealOrderExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallMealOrder.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallMealOrder.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_meal_order
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_meal_order
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_meal_order
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallMealOrderExample example);
    }
}